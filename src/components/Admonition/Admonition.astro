---
import { Icon } from "astro-icon/components";

interface Props {
	variant: "tip" | "caution" | "danger" | "info";
}

const { variant } = Astro.props as Props;

// create a switch statement that switches on "variant" and returns the appropriate icon
const icon = (() => {
	switch (variant) {
		case "tip":
			return "tabler:bulb";
		case "caution":
			return "tabler:alert-triangle";
		case "danger":
			return "tabler:flame";
		case "info":
			return "tabler:info-circle";
	}
})();
---

<div
    class:list={[
        "admonition my-3 rounded-md border-l-4 px-4 py-3",
        {
            "border-orange-500 bg-orange-100 text-orange-900 [&_code]:bg-orange-200 [&_code]:border-orange-300":
                variant === "tip",
        },
        {
            "border-orange-600 bg-orange-200 text-orange-900 [&_code]:bg-orange-300 [&_code]:border-orange-400":
                variant === "caution",
        },
        {
            "border-orange-700 bg-orange-300 text-orange-900 [&_code]:bg-orange-400 [&_code]:border-orange-500":
                variant === "danger",
        },
        {
            "border-orange-800 bg-orange-400 text-orange-900 [&_code]:bg-orange-500 [&_code]:border-orange-600":
                variant === "info",
        },
    ]}
>
    <div class="not-content text-orange-900 flex items-center gap-2 pb-2">
        <!-- <Icon name={icon} class="h-7 w-7" aria-hidden="true" /> -->
        <!-- <p class="text-sm font-bold">{variant.toUpperCase()}</p> -->
    </div>
    <slot />
</div>


<style is:global>
	.admonition > :first-child {
		margin-top: 0;
	}
	.admonition > :nth-child(2) {
		margin-top: 0;
	}
	.admonition > :last-child {
		margin-top: 0;
	}
</style>
